// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: app/order_service/api/api.proto

package api

import (
	context "context"
	encoding_binary "encoding/binary"
	fmt "fmt"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "google.golang.org/genproto/googleapis/rpc/code"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// GetOrderDetailRequest
type GetOrderDetailRequest struct {
	// ProductId
	ProductId int64 `protobuf:"varint,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	// Quantity
	Quantity float32 `protobuf:"fixed32,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	// ActionById
	ActionById           int64    `protobuf:"varint,3,opt,name=action_by_id,json=actionById,proto3" json:"action_by_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetOrderDetailRequest) Reset()         { *m = GetOrderDetailRequest{} }
func (m *GetOrderDetailRequest) String() string { return proto.CompactTextString(m) }
func (*GetOrderDetailRequest) ProtoMessage()    {}
func (*GetOrderDetailRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8da2663c0071886b, []int{0}
}
func (m *GetOrderDetailRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetOrderDetailRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetOrderDetailRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetOrderDetailRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOrderDetailRequest.Merge(m, src)
}
func (m *GetOrderDetailRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetOrderDetailRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOrderDetailRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetOrderDetailRequest proto.InternalMessageInfo

func (m *GetOrderDetailRequest) GetProductId() int64 {
	if m != nil {
		return m.ProductId
	}
	return 0
}

func (m *GetOrderDetailRequest) GetQuantity() float32 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func (m *GetOrderDetailRequest) GetActionById() int64 {
	if m != nil {
		return m.ActionById
	}
	return 0
}

// GetOrderDetailResponse
type GetOrderDetailResponse struct {
	// Code
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// Message
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Data
	Data                 *GetOrderDetailResponseData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *GetOrderDetailResponse) Reset()         { *m = GetOrderDetailResponse{} }
func (m *GetOrderDetailResponse) String() string { return proto.CompactTextString(m) }
func (*GetOrderDetailResponse) ProtoMessage()    {}
func (*GetOrderDetailResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8da2663c0071886b, []int{1}
}
func (m *GetOrderDetailResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetOrderDetailResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetOrderDetailResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetOrderDetailResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOrderDetailResponse.Merge(m, src)
}
func (m *GetOrderDetailResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetOrderDetailResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOrderDetailResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetOrderDetailResponse proto.InternalMessageInfo

func (m *GetOrderDetailResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetOrderDetailResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *GetOrderDetailResponse) GetData() *GetOrderDetailResponseData {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*GetOrderDetailRequest)(nil), "app.order_service.api.GetOrderDetailRequest")
	proto.RegisterType((*GetOrderDetailResponse)(nil), "app.order_service.api.GetOrderDetailResponse")
}

func init() { proto.RegisterFile("app/order_service/api/api.proto", fileDescriptor_8da2663c0071886b) }

var fileDescriptor_8da2663c0071886b = []byte{
	// 379 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x51, 0x3d, 0x6f, 0xdb, 0x30,
	0x14, 0x2c, 0x6d, 0xf7, 0xc3, 0xac, 0xe1, 0x81, 0xad, 0x5a, 0x57, 0x68, 0x55, 0x41, 0x4b, 0x8d,
	0xa2, 0x95, 0x60, 0x77, 0xeb, 0x68, 0xb8, 0x28, 0x3c, 0x15, 0x50, 0xb7, 0x2e, 0xc6, 0xb3, 0x48,
	0xa8, 0x04, 0x6c, 0x91, 0x96, 0x9e, 0x0d, 0x78, 0xcd, 0x94, 0x25, 0x53, 0x96, 0xe4, 0x1f, 0x65,
	0x0c, 0x90, 0x3f, 0x10, 0x38, 0xf9, 0x21, 0x01, 0x29, 0x39, 0x88, 0x0d, 0x0d, 0xc9, 0x20, 0xe0,
	0x78, 0xba, 0xe3, 0x3d, 0xbe, 0xa3, 0x9f, 0x41, 0xeb, 0x48, 0xe5, 0x5c, 0xe4, 0xd3, 0x42, 0xe4,
	0x6b, 0x99, 0x88, 0x08, 0xb4, 0x34, 0x5f, 0xa8, 0x73, 0x85, 0x8a, 0x39, 0xa0, 0x75, 0xb8, 0x27,
	0x08, 0x41, 0x4b, 0xf7, 0xfd, 0x1a, 0xe6, 0x92, 0x03, 0x8a, 0x68, 0x07, 0x4a, 0xbd, 0xeb, 0xa4,
	0x4a, 0xa5, 0x73, 0x11, 0xe5, 0x3a, 0x89, 0x12, 0xc5, 0x0f, 0x69, 0x73, 0xf9, 0x7f, 0x44, 0x5d,
	0xd1, 0x1f, 0x1f, 0xd0, 0x90, 0x65, 0x0a, 0x01, 0xa5, 0xca, 0x8a, 0xea, 0xef, 0xdb, 0x54, 0xa5,
	0xca, 0xc2, 0xc8, 0xa0, 0x8a, 0xf5, 0xeb, 0x47, 0xe6, 0x80, 0x50, 0x2a, 0x02, 0xa4, 0xce, 0x6f,
	0x81, 0x7f, 0x8c, 0x64, 0x2c, 0x10, 0xe4, 0x3c, 0x16, 0xcb, 0x95, 0x28, 0x90, 0x7d, 0xa2, 0x54,
	0xe7, 0x8a, 0xaf, 0x12, 0x9c, 0x4a, 0xde, 0x23, 0x3e, 0xe9, 0x37, 0xe3, 0x76, 0xc5, 0x4c, 0x38,
	0x73, 0xe9, 0xab, 0xe5, 0x0a, 0x32, 0x94, 0xb8, 0xe9, 0x35, 0x7c, 0xd2, 0x6f, 0xc4, 0xf7, 0x67,
	0xe6, 0xd3, 0x0e, 0x24, 0x66, 0xb8, 0xe9, 0x6c, 0x63, 0xcc, 0x4d, 0x6b, 0xa6, 0x25, 0x37, 0xda,
	0x4c, 0x78, 0x70, 0x42, 0xe8, 0xbb, 0xc3, 0xd8, 0x42, 0xab, 0xac, 0x10, 0x8c, 0xd1, 0x96, 0xd9,
	0x85, 0x4d, 0x7c, 0x1e, 0x5b, 0xcc, 0x7a, 0xf4, 0xe5, 0x42, 0x14, 0x05, 0xa4, 0xc2, 0x66, 0xb5,
	0xe3, 0xdd, 0x91, 0xfd, 0xa2, 0x2d, 0xf3, 0x18, 0x1b, 0xf1, 0x7a, 0x38, 0x08, 0x6b, 0x1b, 0x08,
	0xeb, 0xa3, 0xc6, 0x80, 0x10, 0x5b, 0xfb, 0xf0, 0x9c, 0xd0, 0x8e, 0x55, 0xfc, 0x2d, 0x5d, 0xec,
	0x98, 0xd0, 0xee, 0xbe, 0x8b, 0x7d, 0x7b, 0xe4, 0xe5, 0x76, 0x7d, 0xee, 0xf7, 0x27, 0x8d, 0x12,
	0x7c, 0x38, 0xba, 0xba, 0x3d, 0x6d, 0xbc, 0x09, 0xba, 0xb6, 0x9f, 0xf5, 0x20, 0x92, 0x0b, 0xad,
	0x72, 0xfc, 0x49, 0xbe, 0x8e, 0xbe, 0x5c, 0x6c, 0x3d, 0x72, 0xb9, 0xf5, 0xc8, 0xf5, 0xd6, 0x23,
	0x67, 0x37, 0xde, 0xb3, 0x7f, 0x4e, 0x6d, 0xab, 0xb3, 0x17, 0xb6, 0xd1, 0x1f, 0x77, 0x01, 0x00,
	0x00, 0xff, 0xff, 0xc3, 0xf1, 0xef, 0x1f, 0xa8, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// OrderServiceClient is the client API for OrderService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OrderServiceClient interface {
	// GetOrderDetail
	GetOrderDetail(ctx context.Context, in *GetOrderDetailRequest, opts ...grpc.CallOption) (*GetOrderDetailResponse, error)
}

type orderServiceClient struct {
	cc *grpc.ClientConn
}

func NewOrderServiceClient(cc *grpc.ClientConn) OrderServiceClient {
	return &orderServiceClient{cc}
}

func (c *orderServiceClient) GetOrderDetail(ctx context.Context, in *GetOrderDetailRequest, opts ...grpc.CallOption) (*GetOrderDetailResponse, error) {
	out := new(GetOrderDetailResponse)
	err := c.cc.Invoke(ctx, "/app.order_service.api.OrderService/GetOrderDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OrderServiceServer is the server API for OrderService service.
type OrderServiceServer interface {
	// GetOrderDetail
	GetOrderDetail(context.Context, *GetOrderDetailRequest) (*GetOrderDetailResponse, error)
}

// UnimplementedOrderServiceServer can be embedded to have forward compatible implementations.
type UnimplementedOrderServiceServer struct {
}

func (*UnimplementedOrderServiceServer) GetOrderDetail(ctx context.Context, req *GetOrderDetailRequest) (*GetOrderDetailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOrderDetail not implemented")
}

func RegisterOrderServiceServer(s *grpc.Server, srv OrderServiceServer) {
	s.RegisterService(&_OrderService_serviceDesc, srv)
}

func _OrderService_GetOrderDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOrderDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).GetOrderDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.order_service.api.OrderService/GetOrderDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).GetOrderDetail(ctx, req.(*GetOrderDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OrderService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "app.order_service.api.OrderService",
	HandlerType: (*OrderServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetOrderDetail",
			Handler:    _OrderService_GetOrderDetail_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "app/order_service/api/api.proto",
}

func (m *GetOrderDetailRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetOrderDetailRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetOrderDetailRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ActionById != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.ActionById))
		i--
		dAtA[i] = 0x18
	}
	if m.Quantity != 0 {
		i -= 4
		encoding_binary.LittleEndian.PutUint32(dAtA[i:], uint32(math.Float32bits(float32(m.Quantity))))
		i--
		dAtA[i] = 0x15
	}
	if m.ProductId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.ProductId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GetOrderDetailResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetOrderDetailResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetOrderDetailResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Data != nil {
		{
			size, err := m.Data.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Message) > 0 {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0x12
	}
	if m.Code != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Code))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintApi(dAtA []byte, offset int, v uint64) int {
	offset -= sovApi(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *GetOrderDetailRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ProductId != 0 {
		n += 1 + sovApi(uint64(m.ProductId))
	}
	if m.Quantity != 0 {
		n += 5
	}
	if m.ActionById != 0 {
		n += 1 + sovApi(uint64(m.ActionById))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetOrderDetailResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Code != 0 {
		n += 1 + sovApi(uint64(m.Code))
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.Data != nil {
		l = m.Data.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovApi(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozApi(x uint64) (n int) {
	return sovApi(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *GetOrderDetailRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetOrderDetailRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetOrderDetailRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProductId", wireType)
			}
			m.ProductId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ProductId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 5 {
				return fmt.Errorf("proto: wrong wireType = %d for field Quantity", wireType)
			}
			var v uint32
			if (iNdEx + 4) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint32(encoding_binary.LittleEndian.Uint32(dAtA[iNdEx:]))
			iNdEx += 4
			m.Quantity = float32(math.Float32frombits(v))
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActionById", wireType)
			}
			m.ActionById = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ActionById |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetOrderDetailResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetOrderDetailResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetOrderDetailResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
			}
			m.Code = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Code |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Data == nil {
				m.Data = &GetOrderDetailResponseData{}
			}
			if err := m.Data.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipApi(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowApi
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowApi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowApi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthApi
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupApi
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthApi
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthApi        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowApi          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupApi = fmt.Errorf("proto: unexpected end of group")
)
