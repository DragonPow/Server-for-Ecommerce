// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: app_v2/product_service/api/product.model.proto

package api

import (
	encoding_binary "encoding/binary"
	fmt "fmt"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "google.golang.org/genproto/googleapis/rpc/code"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// GetDetailProductRequest
type GetDetailProductRequest struct {
	// Id
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDetailProductRequest) Reset()         { *m = GetDetailProductRequest{} }
func (m *GetDetailProductRequest) String() string { return proto.CompactTextString(m) }
func (*GetDetailProductRequest) ProtoMessage()    {}
func (*GetDetailProductRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d137c3de5263a2b0, []int{0}
}
func (m *GetDetailProductRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetDetailProductRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetDetailProductRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetDetailProductRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDetailProductRequest.Merge(m, src)
}
func (m *GetDetailProductRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetDetailProductRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDetailProductRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDetailProductRequest proto.InternalMessageInfo

func (m *GetDetailProductRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

// GetDetailProductResponse
type GetDetailProductResponse struct {
	// Code
	Code uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// Message
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Data
	Data                 *ProductDetail `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GetDetailProductResponse) Reset()         { *m = GetDetailProductResponse{} }
func (m *GetDetailProductResponse) String() string { return proto.CompactTextString(m) }
func (*GetDetailProductResponse) ProtoMessage()    {}
func (*GetDetailProductResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d137c3de5263a2b0, []int{1}
}
func (m *GetDetailProductResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetDetailProductResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetDetailProductResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetDetailProductResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDetailProductResponse.Merge(m, src)
}
func (m *GetDetailProductResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetDetailProductResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDetailProductResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDetailProductResponse proto.InternalMessageInfo

func (m *GetDetailProductResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetDetailProductResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *GetDetailProductResponse) GetData() *ProductDetail {
	if m != nil {
		return m.Data
	}
	return nil
}

// GetListProductRequest
type GetListProductRequest struct {
	// Page
	Page int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	// PageSize
	PageSize             int64    `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetListProductRequest) Reset()         { *m = GetListProductRequest{} }
func (m *GetListProductRequest) String() string { return proto.CompactTextString(m) }
func (*GetListProductRequest) ProtoMessage()    {}
func (*GetListProductRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d137c3de5263a2b0, []int{2}
}
func (m *GetListProductRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetListProductRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetListProductRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetListProductRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetListProductRequest.Merge(m, src)
}
func (m *GetListProductRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetListProductRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetListProductRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetListProductRequest proto.InternalMessageInfo

func (m *GetListProductRequest) GetPage() int64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetListProductRequest) GetPageSize() int64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

// GetListProductResponse
type GetListProductResponse struct {
	// Code
	Code uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// Message
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Data
	Data                 *GetListProductResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *GetListProductResponse) Reset()         { *m = GetListProductResponse{} }
func (m *GetListProductResponse) String() string { return proto.CompactTextString(m) }
func (*GetListProductResponse) ProtoMessage()    {}
func (*GetListProductResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d137c3de5263a2b0, []int{3}
}
func (m *GetListProductResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetListProductResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetListProductResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetListProductResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetListProductResponse.Merge(m, src)
}
func (m *GetListProductResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetListProductResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetListProductResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetListProductResponse proto.InternalMessageInfo

func (m *GetListProductResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetListProductResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *GetListProductResponse) GetData() *GetListProductResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

// Data
type GetListProductResponse_Data struct {
	// TotalItems
	TotalItems int64 `protobuf:"varint,1,opt,name=total_items,json=totalItems,proto3" json:"total_items,omitempty"`
	// Page
	Page int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	// PageSize
	PageSize int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Items
	Items                []*ProductOverview `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *GetListProductResponse_Data) Reset()         { *m = GetListProductResponse_Data{} }
func (m *GetListProductResponse_Data) String() string { return proto.CompactTextString(m) }
func (*GetListProductResponse_Data) ProtoMessage()    {}
func (*GetListProductResponse_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_d137c3de5263a2b0, []int{3, 0}
}
func (m *GetListProductResponse_Data) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetListProductResponse_Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetListProductResponse_Data.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetListProductResponse_Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetListProductResponse_Data.Merge(m, src)
}
func (m *GetListProductResponse_Data) XXX_Size() int {
	return m.Size()
}
func (m *GetListProductResponse_Data) XXX_DiscardUnknown() {
	xxx_messageInfo_GetListProductResponse_Data.DiscardUnknown(m)
}

var xxx_messageInfo_GetListProductResponse_Data proto.InternalMessageInfo

func (m *GetListProductResponse_Data) GetTotalItems() int64 {
	if m != nil {
		return m.TotalItems
	}
	return 0
}

func (m *GetListProductResponse_Data) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetListProductResponse_Data) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *GetListProductResponse_Data) GetItems() []*ProductOverview {
	if m != nil {
		return m.Items
	}
	return nil
}

// ProductDetail
type ProductDetail struct {
	// Id
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Name
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// OriginPrice
	OriginPrice float64 `protobuf:"fixed64,3,opt,name=origin_price,json=originPrice,proto3" json:"origin_price,omitempty"`
	// SalePrice
	SalePrice float64 `protobuf:"fixed64,4,opt,name=sale_price,json=salePrice,proto3" json:"sale_price,omitempty"`
	// Variants
	Variants string `protobuf:"bytes,5,opt,name=variants,proto3" json:"variants,omitempty"`
	// CreatedBy
	CreatedBy string `protobuf:"bytes,6,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	// CreatedDate
	CreatedDate string `protobuf:"bytes,7,opt,name=created_date,json=createdDate,proto3" json:"created_date,omitempty"`
	// UpdatedBy
	UpdatedBy string `protobuf:"bytes,8,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"`
	// UpdatedDate
	UpdatedDate string `protobuf:"bytes,9,opt,name=updated_date,json=updatedDate,proto3" json:"updated_date,omitempty"`
	// TemplateId
	TemplateId int64 `protobuf:"varint,10,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	// TemplateName
	TemplateName string `protobuf:"bytes,11,opt,name=template_name,json=templateName,proto3" json:"template_name,omitempty"`
	// TemplateDescription
	TemplateDescription string `protobuf:"bytes,12,opt,name=template_description,json=templateDescription,proto3" json:"template_description,omitempty"`
	// SoldQuantity
	SoldQuantity float64 `protobuf:"fixed64,13,opt,name=sold_quantity,json=soldQuantity,proto3" json:"sold_quantity,omitempty"`
	// RemainQuantity
	RemainQuantity float64 `protobuf:"fixed64,14,opt,name=remain_quantity,json=remainQuantity,proto3" json:"remain_quantity,omitempty"`
	// Rating
	Rating float64 `protobuf:"fixed64,15,opt,name=rating,proto3" json:"rating,omitempty"`
	// NumberRating
	NumberRating int32 `protobuf:"varint,16,opt,name=number_rating,json=numberRating,proto3" json:"number_rating,omitempty"`
	// SellerId
	SellerId int64 `protobuf:"varint,17,opt,name=seller_id,json=sellerId,proto3" json:"seller_id,omitempty"`
	// SellerName
	SellerName string `protobuf:"bytes,18,opt,name=seller_name,json=sellerName,proto3" json:"seller_name,omitempty"`
	// SellerLogo
	SellerLogo string `protobuf:"bytes,19,opt,name=seller_logo,json=sellerLogo,proto3" json:"seller_logo,omitempty"`
	// SellerAddress
	SellerAddress string `protobuf:"bytes,20,opt,name=seller_address,json=sellerAddress,proto3" json:"seller_address,omitempty"`
	// CategoryId
	CategoryId int64 `protobuf:"varint,21,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	// CategoryName
	CategoryName string `protobuf:"bytes,22,opt,name=category_name,json=categoryName,proto3" json:"category_name,omitempty"`
	// UomId
	UomId int64 `protobuf:"varint,23,opt,name=uom_id,json=uomId,proto3" json:"uom_id,omitempty"`
	// UomName
	UomName              string   `protobuf:"bytes,24,opt,name=uom_name,json=uomName,proto3" json:"uom_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProductDetail) Reset()         { *m = ProductDetail{} }
func (m *ProductDetail) String() string { return proto.CompactTextString(m) }
func (*ProductDetail) ProtoMessage()    {}
func (*ProductDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_d137c3de5263a2b0, []int{4}
}
func (m *ProductDetail) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProductDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ProductDetail.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ProductDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProductDetail.Merge(m, src)
}
func (m *ProductDetail) XXX_Size() int {
	return m.Size()
}
func (m *ProductDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_ProductDetail.DiscardUnknown(m)
}

var xxx_messageInfo_ProductDetail proto.InternalMessageInfo

func (m *ProductDetail) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ProductDetail) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ProductDetail) GetOriginPrice() float64 {
	if m != nil {
		return m.OriginPrice
	}
	return 0
}

func (m *ProductDetail) GetSalePrice() float64 {
	if m != nil {
		return m.SalePrice
	}
	return 0
}

func (m *ProductDetail) GetVariants() string {
	if m != nil {
		return m.Variants
	}
	return ""
}

func (m *ProductDetail) GetCreatedBy() string {
	if m != nil {
		return m.CreatedBy
	}
	return ""
}

func (m *ProductDetail) GetCreatedDate() string {
	if m != nil {
		return m.CreatedDate
	}
	return ""
}

func (m *ProductDetail) GetUpdatedBy() string {
	if m != nil {
		return m.UpdatedBy
	}
	return ""
}

func (m *ProductDetail) GetUpdatedDate() string {
	if m != nil {
		return m.UpdatedDate
	}
	return ""
}

func (m *ProductDetail) GetTemplateId() int64 {
	if m != nil {
		return m.TemplateId
	}
	return 0
}

func (m *ProductDetail) GetTemplateName() string {
	if m != nil {
		return m.TemplateName
	}
	return ""
}

func (m *ProductDetail) GetTemplateDescription() string {
	if m != nil {
		return m.TemplateDescription
	}
	return ""
}

func (m *ProductDetail) GetSoldQuantity() float64 {
	if m != nil {
		return m.SoldQuantity
	}
	return 0
}

func (m *ProductDetail) GetRemainQuantity() float64 {
	if m != nil {
		return m.RemainQuantity
	}
	return 0
}

func (m *ProductDetail) GetRating() float64 {
	if m != nil {
		return m.Rating
	}
	return 0
}

func (m *ProductDetail) GetNumberRating() int32 {
	if m != nil {
		return m.NumberRating
	}
	return 0
}

func (m *ProductDetail) GetSellerId() int64 {
	if m != nil {
		return m.SellerId
	}
	return 0
}

func (m *ProductDetail) GetSellerName() string {
	if m != nil {
		return m.SellerName
	}
	return ""
}

func (m *ProductDetail) GetSellerLogo() string {
	if m != nil {
		return m.SellerLogo
	}
	return ""
}

func (m *ProductDetail) GetSellerAddress() string {
	if m != nil {
		return m.SellerAddress
	}
	return ""
}

func (m *ProductDetail) GetCategoryId() int64 {
	if m != nil {
		return m.CategoryId
	}
	return 0
}

func (m *ProductDetail) GetCategoryName() string {
	if m != nil {
		return m.CategoryName
	}
	return ""
}

func (m *ProductDetail) GetUomId() int64 {
	if m != nil {
		return m.UomId
	}
	return 0
}

func (m *ProductDetail) GetUomName() string {
	if m != nil {
		return m.UomName
	}
	return ""
}

// ProductOverview
type ProductOverview struct {
	// Id
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Name
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// OriginPrice
	OriginPrice float64 `protobuf:"fixed64,3,opt,name=origin_price,json=originPrice,proto3" json:"origin_price,omitempty"`
	// SalePrice
	SalePrice float64 `protobuf:"fixed64,4,opt,name=sale_price,json=salePrice,proto3" json:"sale_price,omitempty"`
	// CreatedBy
	CreatedBy string `protobuf:"bytes,5,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	// CreatedDate
	CreatedDate string `protobuf:"bytes,6,opt,name=created_date,json=createdDate,proto3" json:"created_date,omitempty"`
	// TemplateId
	TemplateId int64 `protobuf:"varint,7,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	// TemplateName
	TemplateName string `protobuf:"bytes,8,opt,name=template_name,json=templateName,proto3" json:"template_name,omitempty"`
	// SoldQuantity
	SoldQuantity float64 `protobuf:"fixed64,9,opt,name=sold_quantity,json=soldQuantity,proto3" json:"sold_quantity,omitempty"`
	// RemainQuantity
	RemainQuantity float64 `protobuf:"fixed64,10,opt,name=remain_quantity,json=remainQuantity,proto3" json:"remain_quantity,omitempty"`
	// Rating
	Rating float64 `protobuf:"fixed64,11,opt,name=Rating,proto3" json:"Rating,omitempty"`
	// SellerId
	SellerId int64 `protobuf:"varint,12,opt,name=seller_id,json=sellerId,proto3" json:"seller_id,omitempty"`
	// SellerName
	SellerName string `protobuf:"bytes,13,opt,name=seller_name,json=sellerName,proto3" json:"seller_name,omitempty"`
	// SellerLogo
	SellerLogo string `protobuf:"bytes,14,opt,name=seller_logo,json=sellerLogo,proto3" json:"seller_logo,omitempty"`
	// CategoryId
	CategoryId int64 `protobuf:"varint,15,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	// CategoryName
	CategoryName string `protobuf:"bytes,16,opt,name=category_name,json=categoryName,proto3" json:"category_name,omitempty"`
	// UomId
	UomId int64 `protobuf:"varint,17,opt,name=uom_id,json=uomId,proto3" json:"uom_id,omitempty"`
	// UomName
	UomName              string   `protobuf:"bytes,18,opt,name=uom_name,json=uomName,proto3" json:"uom_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProductOverview) Reset()         { *m = ProductOverview{} }
func (m *ProductOverview) String() string { return proto.CompactTextString(m) }
func (*ProductOverview) ProtoMessage()    {}
func (*ProductOverview) Descriptor() ([]byte, []int) {
	return fileDescriptor_d137c3de5263a2b0, []int{5}
}
func (m *ProductOverview) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProductOverview) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ProductOverview.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ProductOverview) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProductOverview.Merge(m, src)
}
func (m *ProductOverview) XXX_Size() int {
	return m.Size()
}
func (m *ProductOverview) XXX_DiscardUnknown() {
	xxx_messageInfo_ProductOverview.DiscardUnknown(m)
}

var xxx_messageInfo_ProductOverview proto.InternalMessageInfo

func (m *ProductOverview) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ProductOverview) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ProductOverview) GetOriginPrice() float64 {
	if m != nil {
		return m.OriginPrice
	}
	return 0
}

func (m *ProductOverview) GetSalePrice() float64 {
	if m != nil {
		return m.SalePrice
	}
	return 0
}

func (m *ProductOverview) GetCreatedBy() string {
	if m != nil {
		return m.CreatedBy
	}
	return ""
}

func (m *ProductOverview) GetCreatedDate() string {
	if m != nil {
		return m.CreatedDate
	}
	return ""
}

func (m *ProductOverview) GetTemplateId() int64 {
	if m != nil {
		return m.TemplateId
	}
	return 0
}

func (m *ProductOverview) GetTemplateName() string {
	if m != nil {
		return m.TemplateName
	}
	return ""
}

func (m *ProductOverview) GetSoldQuantity() float64 {
	if m != nil {
		return m.SoldQuantity
	}
	return 0
}

func (m *ProductOverview) GetRemainQuantity() float64 {
	if m != nil {
		return m.RemainQuantity
	}
	return 0
}

func (m *ProductOverview) GetRating() float64 {
	if m != nil {
		return m.Rating
	}
	return 0
}

func (m *ProductOverview) GetSellerId() int64 {
	if m != nil {
		return m.SellerId
	}
	return 0
}

func (m *ProductOverview) GetSellerName() string {
	if m != nil {
		return m.SellerName
	}
	return ""
}

func (m *ProductOverview) GetSellerLogo() string {
	if m != nil {
		return m.SellerLogo
	}
	return ""
}

func (m *ProductOverview) GetCategoryId() int64 {
	if m != nil {
		return m.CategoryId
	}
	return 0
}

func (m *ProductOverview) GetCategoryName() string {
	if m != nil {
		return m.CategoryName
	}
	return ""
}

func (m *ProductOverview) GetUomId() int64 {
	if m != nil {
		return m.UomId
	}
	return 0
}

func (m *ProductOverview) GetUomName() string {
	if m != nil {
		return m.UomName
	}
	return ""
}

func init() {
	proto.RegisterType((*GetDetailProductRequest)(nil), "app_v2.product_service.api.GetDetailProductRequest")
	proto.RegisterType((*GetDetailProductResponse)(nil), "app_v2.product_service.api.GetDetailProductResponse")
	proto.RegisterType((*GetListProductRequest)(nil), "app_v2.product_service.api.GetListProductRequest")
	proto.RegisterType((*GetListProductResponse)(nil), "app_v2.product_service.api.GetListProductResponse")
	proto.RegisterType((*GetListProductResponse_Data)(nil), "app_v2.product_service.api.GetListProductResponse.Data")
	proto.RegisterType((*ProductDetail)(nil), "app_v2.product_service.api.ProductDetail")
	proto.RegisterType((*ProductOverview)(nil), "app_v2.product_service.api.ProductOverview")
}

func init() {
	proto.RegisterFile("app_v2/product_service/api/product.model.proto", fileDescriptor_d137c3de5263a2b0)
}

var fileDescriptor_d137c3de5263a2b0 = []byte{
	// 837 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x56, 0xcb, 0x8e, 0x23, 0x35,
	0x14, 0xa5, 0x3a, 0x8f, 0x4e, 0x6e, 0x1e, 0x3d, 0xe3, 0xe9, 0x47, 0x91, 0x81, 0xa6, 0x09, 0x42,
	0xf4, 0x08, 0x54, 0x11, 0xcd, 0x82, 0x15, 0x8b, 0x19, 0xb5, 0x34, 0xb4, 0x18, 0xc1, 0x50, 0xec,
	0xd8, 0x94, 0xdc, 0x65, 0xab, 0xb0, 0x54, 0x55, 0xae, 0x29, 0xbb, 0x82, 0x32, 0x3f, 0xc0, 0x27,
	0x80, 0xc4, 0x57, 0xb0, 0xe7, 0x03, 0x58, 0xf2, 0x09, 0xa8, 0xf9, 0x11, 0xe4, 0x6b, 0x57, 0x7a,
	0x52, 0x49, 0x3a, 0x2d, 0x16, 0xb3, 0x8a, 0x7d, 0xee, 0xf1, 0xb9, 0x0f, 0x1f, 0x27, 0x81, 0x80,
	0x16, 0x45, 0x34, 0xbf, 0x98, 0x15, 0xa5, 0x64, 0x55, 0xac, 0x23, 0xc5, 0xcb, 0xb9, 0x88, 0xf9,
	0x8c, 0x16, 0xa2, 0xc6, 0x82, 0x4c, 0x32, 0x9e, 0x06, 0x45, 0x29, 0xb5, 0x24, 0x13, 0xcb, 0x0f,
	0x1a, 0xfc, 0x80, 0x16, 0x62, 0x72, 0x32, 0xa7, 0xa9, 0x60, 0x54, 0xf3, 0x59, 0xbd, 0xb0, 0x87,
	0x26, 0x47, 0x89, 0x94, 0x49, 0xca, 0x67, 0x65, 0x11, 0xcf, 0x62, 0xc9, 0x9a, 0xb0, 0xc9, 0xf5,
	0x93, 0xd6, 0x85, 0x83, 0xdf, 0x7b, 0x03, 0xa6, 0x79, 0x2e, 0x35, 0xd5, 0x42, 0xe6, 0xca, 0x45,
	0x0f, 0x13, 0x99, 0x48, 0x5c, 0xce, 0xcc, 0xca, 0xa2, 0xd3, 0x27, 0x70, 0xf2, 0x9c, 0xeb, 0x4b,
	0xae, 0xa9, 0x48, 0x5f, 0xda, 0xd2, 0x42, 0xfe, 0xaa, 0xe2, 0x4a, 0x93, 0x31, 0xec, 0x09, 0xe6,
	0x7b, 0x67, 0xde, 0x79, 0x2b, 0xdc, 0x13, 0x6c, 0xfa, 0x8b, 0x07, 0xfe, 0x3a, 0x57, 0x15, 0x32,
	0x57, 0x9c, 0x10, 0x68, 0x9b, 0x02, 0x91, 0x3e, 0x0a, 0x71, 0x4d, 0x7c, 0xd8, 0xcf, 0xb8, 0x52,
	0x34, 0xe1, 0xfe, 0xde, 0x99, 0x77, 0xde, 0x0f, 0xeb, 0x2d, 0xf9, 0x0a, 0xda, 0x8c, 0x6a, 0xea,
	0xb7, 0xce, 0xbc, 0xf3, 0xc1, 0xc5, 0x93, 0x60, 0xfb, 0x6c, 0x02, 0x97, 0xc8, 0x66, 0x0d, 0xf1,
	0xd8, 0xf4, 0x6b, 0x38, 0x7a, 0xce, 0xf5, 0x0b, 0xa1, 0x74, 0xa3, 0x64, 0x02, 0xed, 0xc2, 0xa4,
	0xb3, 0x45, 0xe3, 0x9a, 0x3c, 0x86, 0xbe, 0xf9, 0x8c, 0x94, 0x78, 0x6d, 0xeb, 0x68, 0x85, 0x3d,
	0x03, 0xfc, 0x20, 0x5e, 0xf3, 0xe9, 0x1f, 0x7b, 0x70, 0xdc, 0x94, 0xfa, 0x5f, 0x1d, 0x7d, 0xb3,
	0xd2, 0xd1, 0x97, 0x77, 0x75, 0xb4, 0x39, 0x5f, 0x70, 0x49, 0x35, 0xb5, 0xfd, 0x4d, 0x7e, 0xf7,
	0xa0, 0x6d, 0xb6, 0xe4, 0x03, 0x18, 0x68, 0xa9, 0x69, 0x1a, 0x09, 0xcd, 0x33, 0xe5, 0xda, 0x02,
	0x84, 0xae, 0x0c, 0xb2, 0x6c, 0xd8, 0x54, 0xd3, 0xd9, 0xd4, 0x70, 0x0b, 0x03, 0xcb, 0x86, 0xc9,
	0x53, 0xe8, 0x58, 0xad, 0xf6, 0x59, 0xeb, 0x7c, 0x70, 0xf1, 0xe9, 0x3d, 0x46, 0xff, 0xdd, 0xdc,
	0x60, 0xfc, 0xe7, 0xd0, 0x9e, 0x9c, 0xfe, 0xda, 0x85, 0xd1, 0xca, 0xad, 0x34, 0x9d, 0x62, 0xaa,
	0xca, 0x69, 0x56, 0xcf, 0x08, 0xd7, 0xe4, 0x43, 0x18, 0xca, 0x52, 0x24, 0x22, 0x8f, 0x8a, 0x52,
	0xc4, 0xb6, 0x30, 0x2f, 0x1c, 0x58, 0xec, 0xa5, 0x81, 0xc8, 0xfb, 0x00, 0x8a, 0xa6, 0xdc, 0x11,
	0xda, 0x48, 0xe8, 0x1b, 0xc4, 0x86, 0x27, 0xd0, 0x9b, 0xd3, 0x52, 0xd0, 0x5c, 0x2b, 0xbf, 0x83,
	0xca, 0xcb, 0xbd, 0x39, 0x1a, 0x97, 0x9c, 0x6a, 0xce, 0xa2, 0xeb, 0x85, 0xdf, 0xc5, 0x68, 0xdf,
	0x21, 0xcf, 0x16, 0x26, 0x79, 0x1d, 0x36, 0xaf, 0xcb, 0xdf, 0x47, 0xc2, 0xc0, 0x61, 0x97, 0x54,
	0x63, 0xf2, 0xaa, 0x60, 0xb5, 0x42, 0xcf, 0x2a, 0x38, 0xc4, 0x2a, 0xd4, 0x61, 0x54, 0xe8, 0x5b,
	0x05, 0x87, 0xa1, 0x82, 0xb9, 0x2c, 0x9e, 0x15, 0x29, 0xd5, 0x3c, 0x12, 0xcc, 0x07, 0x77, 0x59,
	0x0e, 0xba, 0x62, 0xe4, 0x23, 0x18, 0x2d, 0x09, 0x38, 0x9f, 0x01, 0x8a, 0x0c, 0x6b, 0xf0, 0x5b,
	0x33, 0xa7, 0xcf, 0xe1, 0x70, 0x49, 0x62, 0x5c, 0xc5, 0xa5, 0x28, 0xcc, 0x2b, 0xf6, 0x87, 0xc8,
	0x7d, 0x54, 0xc7, 0x2e, 0x6f, 0x43, 0x46, 0x57, 0xc9, 0x94, 0x45, 0xaf, 0x2a, 0x9a, 0x6b, 0xa1,
	0x17, 0xfe, 0x08, 0x47, 0x37, 0x34, 0xe0, 0xf7, 0x0e, 0x23, 0x9f, 0xc0, 0x41, 0xc9, 0x33, 0x2a,
	0xf2, 0x5b, 0xda, 0x18, 0x69, 0x63, 0x0b, 0x2f, 0x89, 0xc7, 0xd0, 0x2d, 0xa9, 0x16, 0x79, 0xe2,
	0x1f, 0x60, 0xdc, 0xed, 0x4c, 0x96, 0xbc, 0xca, 0xae, 0x79, 0x19, 0xb9, 0xf0, 0x03, 0xb4, 0xd6,
	0xd0, 0x82, 0xa1, 0x25, 0x3d, 0x86, 0xbe, 0xe2, 0x69, 0xca, 0x4b, 0x33, 0x81, 0x87, 0xf6, 0xb1,
	0x59, 0xe0, 0x8a, 0x99, 0x01, 0xb9, 0x20, 0x76, 0x4f, 0xb0, 0x23, 0xb0, 0x10, 0xf6, 0x7e, 0x4b,
	0x48, 0x65, 0x22, 0xfd, 0x47, 0x6f, 0x12, 0x5e, 0xc8, 0x44, 0x92, 0x8f, 0x61, 0xec, 0x08, 0x94,
	0xb1, 0x92, 0x2b, 0xe5, 0x1f, 0x22, 0x67, 0x64, 0xd1, 0xa7, 0x16, 0x34, 0x3a, 0x31, 0xd5, 0x3c,
	0x91, 0xe5, 0xc2, 0xd4, 0x71, 0x64, 0x6f, 0xa2, 0x86, 0xec, 0x4d, 0x2c, 0x09, 0x58, 0xcb, 0xb1,
	0xbd, 0x89, 0x1a, 0xc4, 0x6a, 0x8e, 0xa0, 0x5b, 0xc9, 0xcc, 0x08, 0x9c, 0xa0, 0x40, 0xa7, 0x92,
	0xd9, 0x15, 0x23, 0xef, 0x42, 0xcf, 0xc0, 0x78, 0xcc, 0xb7, 0x5f, 0x02, 0x95, 0xcc, 0xcc, 0x89,
	0xe9, 0x9f, 0x6d, 0x38, 0x68, 0x3c, 0x9a, 0xb7, 0xf4, 0x36, 0x56, 0xfd, 0xdf, 0xd9, 0xe5, 0xff,
	0xee, 0xba, 0xff, 0x1b, 0xee, 0xdd, 0xdf, 0xed, 0xde, 0xde, 0x06, 0xf7, 0xae, 0x59, 0xb1, 0x7f,
	0x3f, 0x2b, 0xc2, 0x36, 0x2b, 0x5a, 0x5f, 0xe1, 0x4b, 0xf1, 0xc2, 0xee, 0x26, 0x97, 0x0d, 0xef,
	0x76, 0xd9, 0x68, 0x97, 0xcb, 0xc6, 0x6b, 0x2e, 0x6b, 0xd8, 0xe7, 0x60, 0xb7, 0x7d, 0x1e, 0xdc,
	0x69, 0x9f, 0x87, 0xdb, 0xec, 0x43, 0x56, 0xec, 0xf3, 0xec, 0xb3, 0xbf, 0x6e, 0x4e, 0xbd, 0xbf,
	0x6f, 0x4e, 0xbd, 0x7f, 0x6e, 0x4e, 0xbd, 0xdf, 0xfe, 0x3d, 0x7d, 0xe7, 0xc7, 0xc9, 0xf6, 0x3f,
	0x19, 0xd7, 0x5d, 0xfc, 0x01, 0xff, 0xe2, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x49, 0xf3, 0x48,
	0xdd, 0x89, 0x08, 0x00, 0x00,
}

func (m *GetDetailProductRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetDetailProductRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetDetailProductRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Id != 0 {
		i = encodeVarintProductModel(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GetDetailProductResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetDetailProductResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetDetailProductResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Data != nil {
		{
			size, err := m.Data.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProductModel(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Message) > 0 {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintProductModel(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0x12
	}
	if m.Code != 0 {
		i = encodeVarintProductModel(dAtA, i, uint64(m.Code))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GetListProductRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetListProductRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetListProductRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PageSize != 0 {
		i = encodeVarintProductModel(dAtA, i, uint64(m.PageSize))
		i--
		dAtA[i] = 0x10
	}
	if m.Page != 0 {
		i = encodeVarintProductModel(dAtA, i, uint64(m.Page))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GetListProductResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetListProductResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetListProductResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Data != nil {
		{
			size, err := m.Data.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProductModel(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Message) > 0 {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintProductModel(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0x12
	}
	if m.Code != 0 {
		i = encodeVarintProductModel(dAtA, i, uint64(m.Code))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GetListProductResponse_Data) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetListProductResponse_Data) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetListProductResponse_Data) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Items) > 0 {
		for iNdEx := len(m.Items) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Items[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintProductModel(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if m.PageSize != 0 {
		i = encodeVarintProductModel(dAtA, i, uint64(m.PageSize))
		i--
		dAtA[i] = 0x18
	}
	if m.Page != 0 {
		i = encodeVarintProductModel(dAtA, i, uint64(m.Page))
		i--
		dAtA[i] = 0x10
	}
	if m.TotalItems != 0 {
		i = encodeVarintProductModel(dAtA, i, uint64(m.TotalItems))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ProductDetail) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProductDetail) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ProductDetail) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.UomName) > 0 {
		i -= len(m.UomName)
		copy(dAtA[i:], m.UomName)
		i = encodeVarintProductModel(dAtA, i, uint64(len(m.UomName)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xc2
	}
	if m.UomId != 0 {
		i = encodeVarintProductModel(dAtA, i, uint64(m.UomId))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xb8
	}
	if len(m.CategoryName) > 0 {
		i -= len(m.CategoryName)
		copy(dAtA[i:], m.CategoryName)
		i = encodeVarintProductModel(dAtA, i, uint64(len(m.CategoryName)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xb2
	}
	if m.CategoryId != 0 {
		i = encodeVarintProductModel(dAtA, i, uint64(m.CategoryId))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xa8
	}
	if len(m.SellerAddress) > 0 {
		i -= len(m.SellerAddress)
		copy(dAtA[i:], m.SellerAddress)
		i = encodeVarintProductModel(dAtA, i, uint64(len(m.SellerAddress)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xa2
	}
	if len(m.SellerLogo) > 0 {
		i -= len(m.SellerLogo)
		copy(dAtA[i:], m.SellerLogo)
		i = encodeVarintProductModel(dAtA, i, uint64(len(m.SellerLogo)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x9a
	}
	if len(m.SellerName) > 0 {
		i -= len(m.SellerName)
		copy(dAtA[i:], m.SellerName)
		i = encodeVarintProductModel(dAtA, i, uint64(len(m.SellerName)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x92
	}
	if m.SellerId != 0 {
		i = encodeVarintProductModel(dAtA, i, uint64(m.SellerId))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x88
	}
	if m.NumberRating != 0 {
		i = encodeVarintProductModel(dAtA, i, uint64(m.NumberRating))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x80
	}
	if m.Rating != 0 {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(m.Rating))))
		i--
		dAtA[i] = 0x79
	}
	if m.RemainQuantity != 0 {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(m.RemainQuantity))))
		i--
		dAtA[i] = 0x71
	}
	if m.SoldQuantity != 0 {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(m.SoldQuantity))))
		i--
		dAtA[i] = 0x69
	}
	if len(m.TemplateDescription) > 0 {
		i -= len(m.TemplateDescription)
		copy(dAtA[i:], m.TemplateDescription)
		i = encodeVarintProductModel(dAtA, i, uint64(len(m.TemplateDescription)))
		i--
		dAtA[i] = 0x62
	}
	if len(m.TemplateName) > 0 {
		i -= len(m.TemplateName)
		copy(dAtA[i:], m.TemplateName)
		i = encodeVarintProductModel(dAtA, i, uint64(len(m.TemplateName)))
		i--
		dAtA[i] = 0x5a
	}
	if m.TemplateId != 0 {
		i = encodeVarintProductModel(dAtA, i, uint64(m.TemplateId))
		i--
		dAtA[i] = 0x50
	}
	if len(m.UpdatedDate) > 0 {
		i -= len(m.UpdatedDate)
		copy(dAtA[i:], m.UpdatedDate)
		i = encodeVarintProductModel(dAtA, i, uint64(len(m.UpdatedDate)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.UpdatedBy) > 0 {
		i -= len(m.UpdatedBy)
		copy(dAtA[i:], m.UpdatedBy)
		i = encodeVarintProductModel(dAtA, i, uint64(len(m.UpdatedBy)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.CreatedDate) > 0 {
		i -= len(m.CreatedDate)
		copy(dAtA[i:], m.CreatedDate)
		i = encodeVarintProductModel(dAtA, i, uint64(len(m.CreatedDate)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.CreatedBy) > 0 {
		i -= len(m.CreatedBy)
		copy(dAtA[i:], m.CreatedBy)
		i = encodeVarintProductModel(dAtA, i, uint64(len(m.CreatedBy)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Variants) > 0 {
		i -= len(m.Variants)
		copy(dAtA[i:], m.Variants)
		i = encodeVarintProductModel(dAtA, i, uint64(len(m.Variants)))
		i--
		dAtA[i] = 0x2a
	}
	if m.SalePrice != 0 {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(m.SalePrice))))
		i--
		dAtA[i] = 0x21
	}
	if m.OriginPrice != 0 {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(m.OriginPrice))))
		i--
		dAtA[i] = 0x19
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintProductModel(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if m.Id != 0 {
		i = encodeVarintProductModel(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ProductOverview) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProductOverview) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ProductOverview) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.UomName) > 0 {
		i -= len(m.UomName)
		copy(dAtA[i:], m.UomName)
		i = encodeVarintProductModel(dAtA, i, uint64(len(m.UomName)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x92
	}
	if m.UomId != 0 {
		i = encodeVarintProductModel(dAtA, i, uint64(m.UomId))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x88
	}
	if len(m.CategoryName) > 0 {
		i -= len(m.CategoryName)
		copy(dAtA[i:], m.CategoryName)
		i = encodeVarintProductModel(dAtA, i, uint64(len(m.CategoryName)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x82
	}
	if m.CategoryId != 0 {
		i = encodeVarintProductModel(dAtA, i, uint64(m.CategoryId))
		i--
		dAtA[i] = 0x78
	}
	if len(m.SellerLogo) > 0 {
		i -= len(m.SellerLogo)
		copy(dAtA[i:], m.SellerLogo)
		i = encodeVarintProductModel(dAtA, i, uint64(len(m.SellerLogo)))
		i--
		dAtA[i] = 0x72
	}
	if len(m.SellerName) > 0 {
		i -= len(m.SellerName)
		copy(dAtA[i:], m.SellerName)
		i = encodeVarintProductModel(dAtA, i, uint64(len(m.SellerName)))
		i--
		dAtA[i] = 0x6a
	}
	if m.SellerId != 0 {
		i = encodeVarintProductModel(dAtA, i, uint64(m.SellerId))
		i--
		dAtA[i] = 0x60
	}
	if m.Rating != 0 {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(m.Rating))))
		i--
		dAtA[i] = 0x59
	}
	if m.RemainQuantity != 0 {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(m.RemainQuantity))))
		i--
		dAtA[i] = 0x51
	}
	if m.SoldQuantity != 0 {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(m.SoldQuantity))))
		i--
		dAtA[i] = 0x49
	}
	if len(m.TemplateName) > 0 {
		i -= len(m.TemplateName)
		copy(dAtA[i:], m.TemplateName)
		i = encodeVarintProductModel(dAtA, i, uint64(len(m.TemplateName)))
		i--
		dAtA[i] = 0x42
	}
	if m.TemplateId != 0 {
		i = encodeVarintProductModel(dAtA, i, uint64(m.TemplateId))
		i--
		dAtA[i] = 0x38
	}
	if len(m.CreatedDate) > 0 {
		i -= len(m.CreatedDate)
		copy(dAtA[i:], m.CreatedDate)
		i = encodeVarintProductModel(dAtA, i, uint64(len(m.CreatedDate)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.CreatedBy) > 0 {
		i -= len(m.CreatedBy)
		copy(dAtA[i:], m.CreatedBy)
		i = encodeVarintProductModel(dAtA, i, uint64(len(m.CreatedBy)))
		i--
		dAtA[i] = 0x2a
	}
	if m.SalePrice != 0 {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(m.SalePrice))))
		i--
		dAtA[i] = 0x21
	}
	if m.OriginPrice != 0 {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(m.OriginPrice))))
		i--
		dAtA[i] = 0x19
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintProductModel(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if m.Id != 0 {
		i = encodeVarintProductModel(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintProductModel(dAtA []byte, offset int, v uint64) int {
	offset -= sovProductModel(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *GetDetailProductRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovProductModel(uint64(m.Id))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetDetailProductResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Code != 0 {
		n += 1 + sovProductModel(uint64(m.Code))
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovProductModel(uint64(l))
	}
	if m.Data != nil {
		l = m.Data.Size()
		n += 1 + l + sovProductModel(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetListProductRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Page != 0 {
		n += 1 + sovProductModel(uint64(m.Page))
	}
	if m.PageSize != 0 {
		n += 1 + sovProductModel(uint64(m.PageSize))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetListProductResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Code != 0 {
		n += 1 + sovProductModel(uint64(m.Code))
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovProductModel(uint64(l))
	}
	if m.Data != nil {
		l = m.Data.Size()
		n += 1 + l + sovProductModel(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetListProductResponse_Data) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TotalItems != 0 {
		n += 1 + sovProductModel(uint64(m.TotalItems))
	}
	if m.Page != 0 {
		n += 1 + sovProductModel(uint64(m.Page))
	}
	if m.PageSize != 0 {
		n += 1 + sovProductModel(uint64(m.PageSize))
	}
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovProductModel(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ProductDetail) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovProductModel(uint64(m.Id))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovProductModel(uint64(l))
	}
	if m.OriginPrice != 0 {
		n += 9
	}
	if m.SalePrice != 0 {
		n += 9
	}
	l = len(m.Variants)
	if l > 0 {
		n += 1 + l + sovProductModel(uint64(l))
	}
	l = len(m.CreatedBy)
	if l > 0 {
		n += 1 + l + sovProductModel(uint64(l))
	}
	l = len(m.CreatedDate)
	if l > 0 {
		n += 1 + l + sovProductModel(uint64(l))
	}
	l = len(m.UpdatedBy)
	if l > 0 {
		n += 1 + l + sovProductModel(uint64(l))
	}
	l = len(m.UpdatedDate)
	if l > 0 {
		n += 1 + l + sovProductModel(uint64(l))
	}
	if m.TemplateId != 0 {
		n += 1 + sovProductModel(uint64(m.TemplateId))
	}
	l = len(m.TemplateName)
	if l > 0 {
		n += 1 + l + sovProductModel(uint64(l))
	}
	l = len(m.TemplateDescription)
	if l > 0 {
		n += 1 + l + sovProductModel(uint64(l))
	}
	if m.SoldQuantity != 0 {
		n += 9
	}
	if m.RemainQuantity != 0 {
		n += 9
	}
	if m.Rating != 0 {
		n += 9
	}
	if m.NumberRating != 0 {
		n += 2 + sovProductModel(uint64(m.NumberRating))
	}
	if m.SellerId != 0 {
		n += 2 + sovProductModel(uint64(m.SellerId))
	}
	l = len(m.SellerName)
	if l > 0 {
		n += 2 + l + sovProductModel(uint64(l))
	}
	l = len(m.SellerLogo)
	if l > 0 {
		n += 2 + l + sovProductModel(uint64(l))
	}
	l = len(m.SellerAddress)
	if l > 0 {
		n += 2 + l + sovProductModel(uint64(l))
	}
	if m.CategoryId != 0 {
		n += 2 + sovProductModel(uint64(m.CategoryId))
	}
	l = len(m.CategoryName)
	if l > 0 {
		n += 2 + l + sovProductModel(uint64(l))
	}
	if m.UomId != 0 {
		n += 2 + sovProductModel(uint64(m.UomId))
	}
	l = len(m.UomName)
	if l > 0 {
		n += 2 + l + sovProductModel(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ProductOverview) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovProductModel(uint64(m.Id))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovProductModel(uint64(l))
	}
	if m.OriginPrice != 0 {
		n += 9
	}
	if m.SalePrice != 0 {
		n += 9
	}
	l = len(m.CreatedBy)
	if l > 0 {
		n += 1 + l + sovProductModel(uint64(l))
	}
	l = len(m.CreatedDate)
	if l > 0 {
		n += 1 + l + sovProductModel(uint64(l))
	}
	if m.TemplateId != 0 {
		n += 1 + sovProductModel(uint64(m.TemplateId))
	}
	l = len(m.TemplateName)
	if l > 0 {
		n += 1 + l + sovProductModel(uint64(l))
	}
	if m.SoldQuantity != 0 {
		n += 9
	}
	if m.RemainQuantity != 0 {
		n += 9
	}
	if m.Rating != 0 {
		n += 9
	}
	if m.SellerId != 0 {
		n += 1 + sovProductModel(uint64(m.SellerId))
	}
	l = len(m.SellerName)
	if l > 0 {
		n += 1 + l + sovProductModel(uint64(l))
	}
	l = len(m.SellerLogo)
	if l > 0 {
		n += 1 + l + sovProductModel(uint64(l))
	}
	if m.CategoryId != 0 {
		n += 1 + sovProductModel(uint64(m.CategoryId))
	}
	l = len(m.CategoryName)
	if l > 0 {
		n += 2 + l + sovProductModel(uint64(l))
	}
	if m.UomId != 0 {
		n += 2 + sovProductModel(uint64(m.UomId))
	}
	l = len(m.UomName)
	if l > 0 {
		n += 2 + l + sovProductModel(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovProductModel(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozProductModel(x uint64) (n int) {
	return sovProductModel(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *GetDetailProductRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProductModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetDetailProductRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetDetailProductRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProductModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProductModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthProductModel
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthProductModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetDetailProductResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProductModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetDetailProductResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetDetailProductResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
			}
			m.Code = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProductModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Code |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProductModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProductModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProductModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProductModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProductModel
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProductModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Data == nil {
				m.Data = &ProductDetail{}
			}
			if err := m.Data.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProductModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthProductModel
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthProductModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetListProductRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProductModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetListProductRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetListProductRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			m.Page = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProductModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Page |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageSize", wireType)
			}
			m.PageSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProductModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PageSize |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProductModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthProductModel
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthProductModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetListProductResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProductModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetListProductResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetListProductResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
			}
			m.Code = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProductModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Code |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProductModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProductModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProductModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProductModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProductModel
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProductModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Data == nil {
				m.Data = &GetListProductResponse_Data{}
			}
			if err := m.Data.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProductModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthProductModel
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthProductModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetListProductResponse_Data) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProductModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Data: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Data: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalItems", wireType)
			}
			m.TotalItems = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProductModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TotalItems |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			m.Page = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProductModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Page |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageSize", wireType)
			}
			m.PageSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProductModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PageSize |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProductModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProductModel
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProductModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, &ProductOverview{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProductModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthProductModel
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthProductModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ProductDetail) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProductModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProductDetail: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProductDetail: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProductModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProductModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProductModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProductModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field OriginPrice", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			m.OriginPrice = float64(math.Float64frombits(v))
		case 4:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field SalePrice", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			m.SalePrice = float64(math.Float64frombits(v))
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Variants", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProductModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProductModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProductModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Variants = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedBy", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProductModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProductModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProductModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CreatedBy = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedDate", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProductModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProductModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProductModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CreatedDate = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdatedBy", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProductModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProductModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProductModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UpdatedBy = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdatedDate", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProductModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProductModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProductModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UpdatedDate = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TemplateId", wireType)
			}
			m.TemplateId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProductModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TemplateId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TemplateName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProductModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProductModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProductModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TemplateName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TemplateDescription", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProductModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProductModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProductModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TemplateDescription = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field SoldQuantity", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			m.SoldQuantity = float64(math.Float64frombits(v))
		case 14:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field RemainQuantity", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			m.RemainQuantity = float64(math.Float64frombits(v))
		case 15:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rating", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			m.Rating = float64(math.Float64frombits(v))
		case 16:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NumberRating", wireType)
			}
			m.NumberRating = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProductModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NumberRating |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 17:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SellerId", wireType)
			}
			m.SellerId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProductModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SellerId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 18:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SellerName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProductModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProductModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProductModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SellerName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 19:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SellerLogo", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProductModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProductModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProductModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SellerLogo = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 20:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SellerAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProductModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProductModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProductModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SellerAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 21:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CategoryId", wireType)
			}
			m.CategoryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProductModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CategoryId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 22:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CategoryName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProductModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProductModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProductModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CategoryName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 23:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UomId", wireType)
			}
			m.UomId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProductModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UomId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 24:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UomName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProductModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProductModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProductModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UomName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProductModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthProductModel
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthProductModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ProductOverview) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProductModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProductOverview: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProductOverview: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProductModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProductModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProductModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProductModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field OriginPrice", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			m.OriginPrice = float64(math.Float64frombits(v))
		case 4:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field SalePrice", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			m.SalePrice = float64(math.Float64frombits(v))
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedBy", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProductModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProductModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProductModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CreatedBy = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedDate", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProductModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProductModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProductModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CreatedDate = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TemplateId", wireType)
			}
			m.TemplateId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProductModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TemplateId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TemplateName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProductModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProductModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProductModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TemplateName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field SoldQuantity", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			m.SoldQuantity = float64(math.Float64frombits(v))
		case 10:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field RemainQuantity", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			m.RemainQuantity = float64(math.Float64frombits(v))
		case 11:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rating", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			m.Rating = float64(math.Float64frombits(v))
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SellerId", wireType)
			}
			m.SellerId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProductModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SellerId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SellerName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProductModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProductModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProductModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SellerName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SellerLogo", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProductModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProductModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProductModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SellerLogo = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 15:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CategoryId", wireType)
			}
			m.CategoryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProductModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CategoryId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CategoryName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProductModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProductModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProductModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CategoryName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 17:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UomId", wireType)
			}
			m.UomId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProductModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UomId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 18:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UomName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProductModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProductModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProductModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UomName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProductModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthProductModel
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthProductModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipProductModel(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowProductModel
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowProductModel
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowProductModel
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthProductModel
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupProductModel
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthProductModel
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthProductModel        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowProductModel          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupProductModel = fmt.Errorf("proto: unexpected end of group")
)
