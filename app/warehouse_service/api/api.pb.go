// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: app/warehouse_service/api/api.proto

package api

import (
	context "context"
	encoding_binary "encoding/binary"
	fmt "fmt"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "google.golang.org/genproto/googleapis/rpc/code"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// CreateImportBillRequest
type CreateImportBillRequest struct {
	// ProductId
	ProductId int64 `protobuf:"varint,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	// Quantity
	Quantity float32 `protobuf:"fixed32,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	// ActionById
	ActionById           int64    `protobuf:"varint,3,opt,name=action_by_id,json=actionById,proto3" json:"action_by_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateImportBillRequest) Reset()         { *m = CreateImportBillRequest{} }
func (m *CreateImportBillRequest) String() string { return proto.CompactTextString(m) }
func (*CreateImportBillRequest) ProtoMessage()    {}
func (*CreateImportBillRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c3cfa98a0a61d9eb, []int{0}
}
func (m *CreateImportBillRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateImportBillRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreateImportBillRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CreateImportBillRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateImportBillRequest.Merge(m, src)
}
func (m *CreateImportBillRequest) XXX_Size() int {
	return m.Size()
}
func (m *CreateImportBillRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateImportBillRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateImportBillRequest proto.InternalMessageInfo

func (m *CreateImportBillRequest) GetProductId() int64 {
	if m != nil {
		return m.ProductId
	}
	return 0
}

func (m *CreateImportBillRequest) GetQuantity() float32 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func (m *CreateImportBillRequest) GetActionById() int64 {
	if m != nil {
		return m.ActionById
	}
	return 0
}

// CreateImportBillResponse
type CreateImportBillResponse struct {
	// Code
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// Message
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Data
	Data                 *CreateImportBillResponseData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *CreateImportBillResponse) Reset()         { *m = CreateImportBillResponse{} }
func (m *CreateImportBillResponse) String() string { return proto.CompactTextString(m) }
func (*CreateImportBillResponse) ProtoMessage()    {}
func (*CreateImportBillResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c3cfa98a0a61d9eb, []int{1}
}
func (m *CreateImportBillResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateImportBillResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreateImportBillResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CreateImportBillResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateImportBillResponse.Merge(m, src)
}
func (m *CreateImportBillResponse) XXX_Size() int {
	return m.Size()
}
func (m *CreateImportBillResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateImportBillResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateImportBillResponse proto.InternalMessageInfo

func (m *CreateImportBillResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateImportBillResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CreateImportBillResponse) GetData() *CreateImportBillResponseData {
	if m != nil {
		return m.Data
	}
	return nil
}

// GetImportBillRequest
type GetImportBillRequest struct {
	// ImportId
	ImportId             int64    `protobuf:"varint,1,opt,name=import_id,json=importId,proto3" json:"import_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetImportBillRequest) Reset()         { *m = GetImportBillRequest{} }
func (m *GetImportBillRequest) String() string { return proto.CompactTextString(m) }
func (*GetImportBillRequest) ProtoMessage()    {}
func (*GetImportBillRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c3cfa98a0a61d9eb, []int{2}
}
func (m *GetImportBillRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetImportBillRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetImportBillRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetImportBillRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetImportBillRequest.Merge(m, src)
}
func (m *GetImportBillRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetImportBillRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetImportBillRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetImportBillRequest proto.InternalMessageInfo

func (m *GetImportBillRequest) GetImportId() int64 {
	if m != nil {
		return m.ImportId
	}
	return 0
}

// GetImportBillResponse
type GetImportBillResponse struct {
	// Code
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// Message
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Data
	Data                 *GetImportBillResponseData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *GetImportBillResponse) Reset()         { *m = GetImportBillResponse{} }
func (m *GetImportBillResponse) String() string { return proto.CompactTextString(m) }
func (*GetImportBillResponse) ProtoMessage()    {}
func (*GetImportBillResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c3cfa98a0a61d9eb, []int{3}
}
func (m *GetImportBillResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetImportBillResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetImportBillResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetImportBillResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetImportBillResponse.Merge(m, src)
}
func (m *GetImportBillResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetImportBillResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetImportBillResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetImportBillResponse proto.InternalMessageInfo

func (m *GetImportBillResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetImportBillResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *GetImportBillResponse) GetData() *GetImportBillResponseData {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*CreateImportBillRequest)(nil), "app.warehouse_service.api.CreateImportBillRequest")
	proto.RegisterType((*CreateImportBillResponse)(nil), "app.warehouse_service.api.CreateImportBillResponse")
	proto.RegisterType((*GetImportBillRequest)(nil), "app.warehouse_service.api.GetImportBillRequest")
	proto.RegisterType((*GetImportBillResponse)(nil), "app.warehouse_service.api.GetImportBillResponse")
}

func init() {
	proto.RegisterFile("app/warehouse_service/api/api.proto", fileDescriptor_c3cfa98a0a61d9eb)
}

var fileDescriptor_c3cfa98a0a61d9eb = []byte{
	// 465 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x53, 0x4d, 0x6b, 0x13, 0x41,
	0x18, 0xee, 0x6c, 0xa3, 0x6d, 0x5e, 0x3f, 0x08, 0x63, 0x6b, 0x93, 0xa0, 0x21, 0x8c, 0x3d, 0x14,
	0x85, 0x1d, 0x4d, 0x05, 0x41, 0x3c, 0xad, 0x82, 0x06, 0x6f, 0xeb, 0x41, 0xf0, 0x12, 0xde, 0xee,
	0x0c, 0xdb, 0x81, 0x74, 0x67, 0xba, 0x33, 0x89, 0xe4, 0xea, 0xd1, 0x8b, 0x07, 0x51, 0xfc, 0x29,
	0xfe, 0x04, 0x8f, 0x82, 0x7f, 0x40, 0xa2, 0xbf, 0xc2, 0x93, 0xec, 0x6c, 0x52, 0x6d, 0xe2, 0x4a,
	0x9b, 0xc3, 0xc2, 0x3b, 0xcf, 0xcc, 0xb3, 0xcf, 0xc7, 0xee, 0xc0, 0x2d, 0x34, 0x86, 0xbf, 0xc6,
	0x5c, 0x1e, 0xea, 0x91, 0x95, 0x03, 0x2b, 0xf3, 0xb1, 0x4a, 0x24, 0x47, 0xa3, 0x8a, 0x27, 0x34,
	0xb9, 0x76, 0x9a, 0xb6, 0xd0, 0x98, 0x70, 0xe9, 0x50, 0x88, 0x46, 0xb5, 0x77, 0xc6, 0x38, 0x54,
	0x02, 0x9d, 0xe4, 0xf3, 0xa1, 0xe4, 0xb4, 0xb7, 0x53, 0xad, 0xd3, 0xa1, 0xe4, 0xb9, 0x49, 0x78,
	0xa2, 0xc5, 0x22, 0x5c, 0x08, 0x1c, 0x3a, 0x67, 0x66, 0xf0, 0x8d, 0xbf, 0x60, 0xcc, 0x32, 0xed,
	0xd0, 0x29, 0x9d, 0xd9, 0xd9, 0xee, 0x56, 0xaa, 0x53, 0xed, 0x47, 0x5e, 0x4c, 0x33, 0x74, 0xb7,
	0xda, 0xba, 0x40, 0x87, 0xe5, 0x29, 0x36, 0x86, 0x9d, 0xc7, 0xb9, 0x44, 0x27, 0xfb, 0x47, 0x46,
	0xe7, 0x2e, 0x52, 0xc3, 0x61, 0x2c, 0x8f, 0x47, 0xd2, 0x3a, 0x7a, 0x13, 0xc0, 0xe4, 0x5a, 0x8c,
	0x12, 0x37, 0x50, 0xa2, 0x49, 0xba, 0x64, 0x6f, 0x3d, 0xae, 0xcf, 0x90, 0xbe, 0xa0, 0x6d, 0xd8,
	0x3c, 0x1e, 0x61, 0xe6, 0x94, 0x9b, 0x34, 0x83, 0x2e, 0xd9, 0x0b, 0xe2, 0x93, 0x35, 0xed, 0xc2,
	0x65, 0x4c, 0x0a, 0x8b, 0x83, 0x83, 0x49, 0x41, 0x5e, 0xf7, 0x64, 0x28, 0xb1, 0x68, 0xd2, 0x17,
	0xec, 0x03, 0x81, 0xe6, 0xb2, 0xb0, 0x35, 0x3a, 0xb3, 0x92, 0x52, 0xa8, 0x15, 0x9d, 0x78, 0xcd,
	0x0b, 0xb1, 0x9f, 0x69, 0x13, 0x36, 0x8e, 0xa4, 0xb5, 0x98, 0x4a, 0xaf, 0x56, 0x8f, 0xe7, 0x4b,
	0xfa, 0x1c, 0x6a, 0x45, 0x20, 0x2f, 0x72, 0xa9, 0xf7, 0x20, 0xac, 0xfc, 0x1a, 0x61, 0x95, 0xe0,
	0x13, 0x74, 0x18, 0xfb, 0x97, 0xb0, 0x47, 0xb0, 0xf5, 0x54, 0xba, 0xe5, 0x32, 0x76, 0xa1, 0xae,
	0x3c, 0x78, 0xd2, 0x45, 0xb4, 0xf1, 0x2b, 0xaa, 0xb1, 0xa0, 0xbb, 0x16, 0x6f, 0x96, 0x3b, 0x7d,
	0xc1, 0xde, 0x11, 0xd8, 0x5e, 0xa0, 0xaf, 0x14, 0xe9, 0xd9, 0xa9, 0x48, 0xf7, 0xff, 0x13, 0xe9,
	0x9f, 0x6a, 0x7f, 0xf2, 0xf4, 0x3e, 0x07, 0xd0, 0x78, 0x39, 0x67, 0xbe, 0x28, 0x89, 0xf4, 0x23,
	0x81, 0xc6, 0x62, 0x17, 0xb4, 0x77, 0xae, 0xe2, 0x7c, 0x2b, 0xed, 0xfd, 0x15, 0xca, 0x66, 0xad,
	0x37, 0xdf, 0x7e, 0xbe, 0x0f, 0xae, 0xb1, 0xab, 0xfe, 0x5f, 0x1c, 0xdf, 0xe3, 0x65, 0x7d, 0x0f,
	0xc9, 0x6d, 0xfa, 0x96, 0xc0, 0x95, 0x53, 0x89, 0x28, 0x3f, 0x7b, 0xf6, 0xd2, 0xd2, 0xdd, 0xf3,
	0x96, 0xc5, 0xae, 0x7b, 0x3f, 0x0d, 0xba, 0xe0, 0x27, 0xba, 0xf3, 0x65, 0xda, 0x21, 0x5f, 0xa7,
	0x1d, 0xf2, 0x7d, 0xda, 0x21, 0x9f, 0x7e, 0x74, 0xd6, 0x5e, 0xb5, 0x2a, 0xaf, 0xd4, 0xc1, 0x45,
	0x7f, 0x9d, 0xf6, 0x7f, 0x07, 0x00, 0x00, 0xff, 0xff, 0x32, 0x8c, 0xe9, 0x4b, 0x31, 0x04, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WarehouseServiceClient is the client API for WarehouseService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WarehouseServiceClient interface {
	// CreateImportBill
	CreateImportBill(ctx context.Context, in *CreateImportBillRequest, opts ...grpc.CallOption) (*CreateImportBillResponse, error)
	// GetImportBill
	GetImportBill(ctx context.Context, in *GetImportBillRequest, opts ...grpc.CallOption) (*GetImportBillResponse, error)
}

type warehouseServiceClient struct {
	cc *grpc.ClientConn
}

func NewWarehouseServiceClient(cc *grpc.ClientConn) WarehouseServiceClient {
	return &warehouseServiceClient{cc}
}

func (c *warehouseServiceClient) CreateImportBill(ctx context.Context, in *CreateImportBillRequest, opts ...grpc.CallOption) (*CreateImportBillResponse, error) {
	out := new(CreateImportBillResponse)
	err := c.cc.Invoke(ctx, "/app.warehouse_service.api.WarehouseService/CreateImportBill", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *warehouseServiceClient) GetImportBill(ctx context.Context, in *GetImportBillRequest, opts ...grpc.CallOption) (*GetImportBillResponse, error) {
	out := new(GetImportBillResponse)
	err := c.cc.Invoke(ctx, "/app.warehouse_service.api.WarehouseService/GetImportBill", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WarehouseServiceServer is the server API for WarehouseService service.
type WarehouseServiceServer interface {
	// CreateImportBill
	CreateImportBill(context.Context, *CreateImportBillRequest) (*CreateImportBillResponse, error)
	// GetImportBill
	GetImportBill(context.Context, *GetImportBillRequest) (*GetImportBillResponse, error)
}

// UnimplementedWarehouseServiceServer can be embedded to have forward compatible implementations.
type UnimplementedWarehouseServiceServer struct {
}

func (*UnimplementedWarehouseServiceServer) CreateImportBill(ctx context.Context, req *CreateImportBillRequest) (*CreateImportBillResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateImportBill not implemented")
}
func (*UnimplementedWarehouseServiceServer) GetImportBill(ctx context.Context, req *GetImportBillRequest) (*GetImportBillResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetImportBill not implemented")
}

func RegisterWarehouseServiceServer(s *grpc.Server, srv WarehouseServiceServer) {
	s.RegisterService(&_WarehouseService_serviceDesc, srv)
}

func _WarehouseService_CreateImportBill_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateImportBillRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WarehouseServiceServer).CreateImportBill(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.warehouse_service.api.WarehouseService/CreateImportBill",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WarehouseServiceServer).CreateImportBill(ctx, req.(*CreateImportBillRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WarehouseService_GetImportBill_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetImportBillRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WarehouseServiceServer).GetImportBill(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.warehouse_service.api.WarehouseService/GetImportBill",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WarehouseServiceServer).GetImportBill(ctx, req.(*GetImportBillRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _WarehouseService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "app.warehouse_service.api.WarehouseService",
	HandlerType: (*WarehouseServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateImportBill",
			Handler:    _WarehouseService_CreateImportBill_Handler,
		},
		{
			MethodName: "GetImportBill",
			Handler:    _WarehouseService_GetImportBill_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "app/warehouse_service/api/api.proto",
}

func (m *CreateImportBillRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateImportBillRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateImportBillRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ActionById != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.ActionById))
		i--
		dAtA[i] = 0x18
	}
	if m.Quantity != 0 {
		i -= 4
		encoding_binary.LittleEndian.PutUint32(dAtA[i:], uint32(math.Float32bits(float32(m.Quantity))))
		i--
		dAtA[i] = 0x15
	}
	if m.ProductId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.ProductId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *CreateImportBillResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateImportBillResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateImportBillResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Data != nil {
		{
			size, err := m.Data.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Message) > 0 {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0x12
	}
	if m.Code != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Code))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GetImportBillRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetImportBillRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetImportBillRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ImportId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.ImportId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GetImportBillResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetImportBillResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetImportBillResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Data != nil {
		{
			size, err := m.Data.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Message) > 0 {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0x12
	}
	if m.Code != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Code))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintApi(dAtA []byte, offset int, v uint64) int {
	offset -= sovApi(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *CreateImportBillRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ProductId != 0 {
		n += 1 + sovApi(uint64(m.ProductId))
	}
	if m.Quantity != 0 {
		n += 5
	}
	if m.ActionById != 0 {
		n += 1 + sovApi(uint64(m.ActionById))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CreateImportBillResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Code != 0 {
		n += 1 + sovApi(uint64(m.Code))
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.Data != nil {
		l = m.Data.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetImportBillRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ImportId != 0 {
		n += 1 + sovApi(uint64(m.ImportId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetImportBillResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Code != 0 {
		n += 1 + sovApi(uint64(m.Code))
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.Data != nil {
		l = m.Data.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovApi(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozApi(x uint64) (n int) {
	return sovApi(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *CreateImportBillRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateImportBillRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateImportBillRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProductId", wireType)
			}
			m.ProductId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ProductId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 5 {
				return fmt.Errorf("proto: wrong wireType = %d for field Quantity", wireType)
			}
			var v uint32
			if (iNdEx + 4) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint32(encoding_binary.LittleEndian.Uint32(dAtA[iNdEx:]))
			iNdEx += 4
			m.Quantity = float32(math.Float32frombits(v))
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActionById", wireType)
			}
			m.ActionById = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ActionById |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreateImportBillResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateImportBillResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateImportBillResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
			}
			m.Code = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Code |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Data == nil {
				m.Data = &CreateImportBillResponseData{}
			}
			if err := m.Data.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetImportBillRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetImportBillRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetImportBillRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ImportId", wireType)
			}
			m.ImportId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ImportId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetImportBillResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetImportBillResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetImportBillResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
			}
			m.Code = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Code |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Data == nil {
				m.Data = &GetImportBillResponseData{}
			}
			if err := m.Data.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipApi(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowApi
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowApi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowApi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthApi
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupApi
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthApi
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthApi        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowApi          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupApi = fmt.Errorf("proto: unexpected end of group")
)
